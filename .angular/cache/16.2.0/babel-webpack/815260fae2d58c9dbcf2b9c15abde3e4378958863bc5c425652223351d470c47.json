{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  ngOnInit() {}\n  login() {\n    // You can implement your authentication logic here\n    // For now, let's just simulate a successful login\n    sessionStorage.setItem('loggedIn', 'true');\n    this.router.navigate(['/main']);\n  }\n  goToSignUp() {\n    this.router.navigate(['/signup']);\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 21,\n  vars: 2,\n  consts: [[1, \"login_form_container\"], [1, \"login_form\", 3, \"ngSubmit\"], [1, \"input_group\"], [1, \"fa\", \"fa-user\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"autocomplete\", \"off\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\", 1, \"input_text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"fa\", \"fa-unlock-alt\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"autocomplete\", \"off\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"input_text\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"login_button\", 1, \"button_group\"], [1, \"footer\"], [\"routerLink\", \"/signup\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(3, \"h2\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵelement(6, \"i\", 3);\n      i0.ɵɵelementStart(7, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2);\n      i0.ɵɵelement(9, \"i\", 5);\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"a\");\n      i0.ɵɵtext(13, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"a\");\n      i0.ɵɵtext(16, \"Forgot Password ?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"p\");\n      i0.ɵɵtext(18, \"Don't have an account? \");\n      i0.ɵɵelementStart(19, \"a\", 9);\n      i0.ɵɵtext(20, \"SingUp\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i1.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 49:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(26:3) C:\\\\\\\\Users\\\\\\\\msi\\\\\\\\Desktop\\\\\\\\geeks-login-logout\\\\\\\\src\\\\\\\\app\\\\\\\\login\\\\\\\\login.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 24 | \\\\u001b[39m    overflow\\\\u001b[33m:\\\\u001b[39m hidden\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 25 | \\\\u001b[39m    margin-top\\\\u001b[33m:\\\\u001b[39m 70px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 26 | \\\\u001b[39m  ba\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 27 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 28 | \\\\u001b[39m\\\\u001b[33m.login_form_container\\\\u001b[39m\\\\u001b[33m:\\\\u001b[39m\\\\u001b[33m:\\\\u001b[39mbefore\\\\u001b[33m{\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[49]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=login.component.css.map*/\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","router","username","password","ngOnInit","login","sessionStorage","setItem","navigate","goToSignUp","i0","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","LoginComponent_Template_input_ngModelChange_7_listener","$event","LoginComponent_Template_input_ngModelChange_10_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\msi\\Desktop\\geeks-login-logout\\src\\app\\login\\login.component.ts","C:\\Users\\msi\\Desktop\\geeks-login-logout\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    // You can implement your authentication logic here\n    // For now, let's just simulate a successful login\n    sessionStorage.setItem('loggedIn', 'true');\n    this.router.navigate(['/main']);\n  }\n  \n  goToSignUp() {\n    this.router.navigate(['/signup']);\n  }\n}\n","<!-- <div class=\"container\">\n  <div class=\"login-form\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"login()\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\" required>\n  \n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n  \n      <button type=\"submit\">Login</button>\n    </form>\n    <p>Don't have an account? <a routerLink=\"/signup\">Sign up</a></p>\n  </div>\n</div>\n   --><body>\n   <div class=\"login_form_container\">\n    <form (ngSubmit)=\"login()\"class=\"login_form\">\n      <h2>Login</h2>\n      <div class=\"input_group\">\n        <i class=\"fa fa-user\"></i>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          class=\"input_text\"\n          autocomplete=\"off\"\n          id=\"username\"\n           name=\"username\"\n            [(ngModel)]=\"username\" required\n        />\n      </div>\n      <div class=\"input_group\">\n        <i class=\"fa fa-unlock-alt\"></i>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          class=\"input_text\"\n          autocomplete=\"off\"\n          id=\"password\"\n         name=\"password\"\n          [(ngModel)]=\"password\" required\n        />\n      </div>\n      <div class=\"button_group\" id=\"login_button\">\n        <a>Submit</a>\n      </div>\n      <div class=\"footer\">\n        <a>Forgot Password ?</a>\n        <p>Don't have an account? <a routerLink=\"/signup\">SingUp</a></p>\n      </div>\n    </form>\n  </div>\n</body>"],"mappings":";;;;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAH1B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAEiB;EAEtCC,QAAQA,CAAA,GACR;EAEAC,KAAKA,CAAA;IACH;IACA;IACAC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;IAC1C,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACR,MAAM,CAACO,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;;SAlBWT,cAAc;;mBAAdA,MAAc,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;;QAAdd,MAAc;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCOrBV,EAAA,CAAAY,cAAA,WAAM;MAEFZ,EAAA,CAAAa,UAAA,sBAAAC,iDAAA;QAAA,OAAYH,GAAA,CAAAhB,KAAA,EAAO;MAAA,EAAC;MACxBK,EAAA,CAAAY,cAAA,SAAI;MAAAZ,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MACdhB,EAAA,CAAAY,cAAA,aAAyB;MACvBZ,EAAA,CAAAiB,SAAA,WAA0B;MAC1BjB,EAAA,CAAAY,cAAA,eAQE;MADEZ,EAAA,CAAAa,UAAA,2BAAAK,uDAAAC,MAAA;QAAA,OAAAR,GAAA,CAAAnB,QAAA,GAAA2B,MAAA;MAAA,EAAsB;MAP1BnB,EAAA,CAAAgB,YAAA,EAQE;MAEJhB,EAAA,CAAAY,cAAA,aAAyB;MACvBZ,EAAA,CAAAiB,SAAA,WAAgC;MAChCjB,EAAA,CAAAY,cAAA,gBAQE;MADAZ,EAAA,CAAAa,UAAA,2BAAAO,wDAAAD,MAAA;QAAA,OAAAR,GAAA,CAAAlB,QAAA,GAAA0B,MAAA;MAAA,EAAsB;MAPxBnB,EAAA,CAAAgB,YAAA,EAQE;MAEJhB,EAAA,CAAAY,cAAA,cAA4C;MACvCZ,EAAA,CAAAe,MAAA,cAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAI;MAEfhB,EAAA,CAAAY,cAAA,cAAoB;MACfZ,EAAA,CAAAe,MAAA,yBAAiB;MAAAf,EAAA,CAAAgB,YAAA,EAAI;MACxBhB,EAAA,CAAAY,cAAA,SAAG;MAAAZ,EAAA,CAAAe,MAAA,+BAAuB;MAAAf,EAAA,CAAAY,cAAA,YAAwB;MAAAZ,EAAA,CAAAe,MAAA,cAAM;MAAAf,EAAA,CAAAgB,YAAA,EAAI;;;MApBxDhB,EAAA,CAAAqB,SAAA,GAAsB;MAAtBrB,EAAA,CAAAsB,UAAA,YAAAX,GAAA,CAAAnB,QAAA,CAAsB;MAYxBQ,EAAA,CAAAqB,SAAA,GAAsB;MAAtBrB,EAAA,CAAAsB,UAAA,YAAAX,GAAA,CAAAlB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}