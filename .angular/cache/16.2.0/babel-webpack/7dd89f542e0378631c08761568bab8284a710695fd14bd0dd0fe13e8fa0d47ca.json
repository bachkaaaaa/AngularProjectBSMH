{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.username = '';\n    this.password = '';\n  }\n  ngOnInit() {}\n  login() {\n    // You can implement your authentication logic here\n    // For now, let's just simulate a successful login\n    sessionStorage.setItem('loggedIn', 'true');\n    this.router.navigate(['/main']);\n  }\n  goToSignUp() {\n    this.router.navigate(['/signup']);\n  }\n}\n_class = LoginComponent;\n_class.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 0,\n  consts: [[1, \"login_form_container\"], [1, \"login_form\"], [1, \"input_group\"], [1, \"fa\", \"fa-user\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"autocomplete\", \"off\", 1, \"input_text\"], [1, \"fa\", \"fa-unlock-alt\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"autocomplete\", \"off\", 1, \"input_text\"], [\"id\", \"login_button\", 1, \"button_group\"], [1, \"fotter\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"i\", 3)(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 2);\n      i0.ɵɵelement(8, \"i\", 5)(9, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"a\");\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"a\");\n      i0.ɵɵtext(15, \"Forgot Password ?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"a\");\n      i0.ɵɵtext(17, \"SingUp\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["LoginComponent","constructor","router","username","password","ngOnInit","login","sessionStorage","setItem","navigate","goToSignUp","i0","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\msi\\Desktop\\geeks-login-logout\\src\\app\\login\\login.component.ts","C:\\Users\\msi\\Desktop\\geeks-login-logout\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string = '';\n  password: string = '';\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    // You can implement your authentication logic here\n    // For now, let's just simulate a successful login\n    sessionStorage.setItem('loggedIn', 'true');\n    this.router.navigate(['/main']);\n  }\n  \n  goToSignUp() {\n    this.router.navigate(['/signup']);\n  }\n}\n","<!-- <div class=\"container\">\n  <div class=\"login-form\">\n    <h2>Login</h2>\n    <form (ngSubmit)=\"login()\">\n      <label for=\"username\">Username:</label>\n      <input type=\"text\" id=\"username\" name=\"username\" [(ngModel)]=\"username\" required>\n  \n      <label for=\"password\">Password:</label>\n      <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n  \n      <button type=\"submit\">Login</button>\n    </form>\n    <p>Don't have an account? <a routerLink=\"/signup\">Sign up</a></p>\n  </div>\n</div>\n   -->\n   <div class=\"login_form_container\">\n    <div class=\"login_form\">\n      <h2>Login</h2>\n      <div class=\"input_group\">\n        <i class=\"fa fa-user\"></i>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          class=\"input_text\"\n          autocomplete=\"off\"\n        />\n      </div>\n      <div class=\"input_group\">\n        <i class=\"fa fa-unlock-alt\"></i>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          class=\"input_text\"\n          autocomplete=\"off\"\n        />\n      </div>\n      <div class=\"button_group\" id=\"login_button\">\n        <a>Submit</a>\n      </div>\n      <div class=\"fotter\">\n        <a>Forgot Password ?</a>\n        <a>SingUp</a>\n      </div>\n    </div>\n  </div>"],"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAH1B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAEiB;EAEtCC,QAAQA,CAAA,GACR;EAEAC,KAAKA,CAAA;IACH;IACA;IACAC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;IAC1C,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACR,MAAM,CAACO,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;;SAlBWT,cAAc;;mBAAdA,MAAc,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;;QAAdd,MAAc;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCQxBV,EAAA,CAAAY,cAAA,aAAkC;MAE3BZ,EAAA,CAAAa,MAAA,YAAK;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACdd,EAAA,CAAAY,cAAA,aAAyB;MACvBZ,EAAA,CAAAe,SAAA,WAA0B;MAO5Bf,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,aAAyB;MACvBZ,EAAA,CAAAe,SAAA,WAAgC;MAOlCf,EAAA,CAAAc,YAAA,EAAM;MACNd,EAAA,CAAAY,cAAA,cAA4C;MACvCZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAI;MAEfd,EAAA,CAAAY,cAAA,cAAoB;MACfZ,EAAA,CAAAa,MAAA,yBAAiB;MAAAb,EAAA,CAAAc,YAAA,EAAI;MACxBd,EAAA,CAAAY,cAAA,SAAG;MAAAZ,EAAA,CAAAa,MAAA,cAAM;MAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}