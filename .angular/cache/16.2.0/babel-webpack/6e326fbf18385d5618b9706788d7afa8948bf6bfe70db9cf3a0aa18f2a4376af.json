{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SignupComponent = class SignupComponent {\n  constructor(router) {\n    this.router = router;\n    this.newUsername = '';\n    this.newPassword = '';\n    this.confirmPassword = '';\n    this.newEmail = '';\n    this.isWeak = false;\n    this.isMedium = false;\n    this.isStrong = false;\n  }\n  ngOnInit() {}\n  validatePasswordStrength(password) {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumbers = /\\d/.test(password);\n    const hasSpecialCharacters = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(password);\n    this.isWeak = password.length < 6;\n    this.isMedium = password.length >= 6 && password.length < 10;\n    this.isStrong = password.length >= 10;\n  }\n  validateEmail(email) {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailPattern.test(email);\n  }\n  signUp() {\n    if (!this.validateEmail(this.newEmail)) {\n      alert('Invalid email format');\n      return;\n    }\n    if (this.newPassword !== this.confirmPassword) {\n      alert('Password do not match');\n      return;\n    }\n    this.validatePasswordStrength(this.newPassword);\n    if (this.isWeak) {\n      alert('Password is too weak. Choose a stronger password.');\n      return;\n    }\n    alert('Sign-up successful! Please log in.');\n    this.router.navigate(['/login']);\n  }\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","SignupComponent","constructor","router","newUsername","newPassword","confirmPassword","newEmail","isWeak","isMedium","isStrong","ngOnInit","validatePasswordStrength","password","hasUpperCase","test","hasLowerCase","hasNumbers","hasSpecialCharacters","length","validateEmail","email","emailPattern","signUp","alert","navigate","goToLogin","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\msi\\Desktop\\geeks-login-logout\\src\\app\\signup\\signup.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  newUsername: string = '';\n  newPassword: string='';\n  confirmPassword: string = '';\n  newEmail: string= '';\n  isWeak: boolean = false;\n  isMedium: boolean = false;\n  isStrong: boolean = false;\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  validatePasswordStrength(password: string): void {\n    const hasUpperCase = /[A-Z]/.test(password);\n    const hasLowerCase = /[a-z]/.test(password);\n    const hasNumbers = /\\d/.test(password);\n    const hasSpecialCharacters = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]+/.test(password);\n\n    this.isWeak = password.length < 6;\n    this.isMedium = password.length >= 6 && password.length < 10;\n    this.isStrong = password.length >= 10;\n  }\n\n  validateEmail(email: string): boolean {\n    const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailPattern.test(email);\n  }\n  \n  signUp() {\n    if (!this.validateEmail(this.newEmail)) {\n\n      alert('Invalid email format');\n      return;\n    } \n    if (this.newPassword !== this.confirmPassword) {\n\n      alert('Password do not match');\n      return;\n    }\n \n    this.validatePasswordStrength(this.newPassword);\n\n    if (this.isWeak) {\n      alert('Password is too weak. Choose a stronger password.');\n      return;\n    }\n\n    alert('Sign-up successful! Please log in.');\n    this.router.navigate(['/login']);\n  }\n\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAP1B,KAAAC,WAAW,GAAW,EAAE;IACxB,KAAAC,WAAW,GAAS,EAAE;IACtB,KAAAC,eAAe,GAAW,EAAE;IAC5B,KAAAC,QAAQ,GAAU,EAAE;IACpB,KAAAC,MAAM,GAAY,KAAK;IACvB,KAAAC,QAAQ,GAAY,KAAK;IACzB,KAAAC,QAAQ,GAAY,KAAK;EACa;EAEtCC,QAAQA,CAAA,GACR;EAEAC,wBAAwBA,CAACC,QAAgB;IACvC,MAAMC,YAAY,GAAG,OAAO,CAACC,IAAI,CAACF,QAAQ,CAAC;IAC3C,MAAMG,YAAY,GAAG,OAAO,CAACD,IAAI,CAACF,QAAQ,CAAC;IAC3C,MAAMI,UAAU,GAAG,IAAI,CAACF,IAAI,CAACF,QAAQ,CAAC;IACtC,MAAMK,oBAAoB,GAAG,wCAAwC,CAACH,IAAI,CAACF,QAAQ,CAAC;IAEpF,IAAI,CAACL,MAAM,GAAGK,QAAQ,CAACM,MAAM,GAAG,CAAC;IACjC,IAAI,CAACV,QAAQ,GAAGI,QAAQ,CAACM,MAAM,IAAI,CAAC,IAAIN,QAAQ,CAACM,MAAM,GAAG,EAAE;IAC5D,IAAI,CAACT,QAAQ,GAAGG,QAAQ,CAACM,MAAM,IAAI,EAAE;EACvC;EAEAC,aAAaA,CAACC,KAAa;IACzB,MAAMC,YAAY,GAAG,iDAAiD;IACtE,OAAOA,YAAY,CAACP,IAAI,CAACM,KAAK,CAAC;EACjC;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAAC,IAAI,CAACH,aAAa,CAAC,IAAI,CAACb,QAAQ,CAAC,EAAE;MAEtCiB,KAAK,CAAC,sBAAsB,CAAC;MAC7B;;IAEF,IAAI,IAAI,CAACnB,WAAW,KAAK,IAAI,CAACC,eAAe,EAAE;MAE7CkB,KAAK,CAAC,uBAAuB,CAAC;MAC9B;;IAGF,IAAI,CAACZ,wBAAwB,CAAC,IAAI,CAACP,WAAW,CAAC;IAE/C,IAAI,IAAI,CAACG,MAAM,EAAE;MACfgB,KAAK,CAAC,mDAAmD,CAAC;MAC1D;;IAGFA,KAAK,CAAC,oCAAoC,CAAC;IAC3C,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,SAASA,CAAA;IACP,IAAI,CAACvB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CAED;AAxDYxB,eAAe,GAAA0B,UAAA,EAL3B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACW7B,eAAe,CAwD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}